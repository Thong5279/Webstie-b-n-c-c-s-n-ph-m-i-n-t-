// const jwt = require("jsonwebtoken");
// async function authToken(req, res, next) {
//   try {
//     const token = req.cookies?.token;

//     console.log("token", token);
//     if (!token) {
//       return res.status(200).json({
//         message: "Vui l√≤ng ƒëƒÉng nh·∫≠p üòä",
//         error: true,
//         succes: false,
//       });
//     }
//     jwt.verify(token, process.env.TOKEN_SECRET_KEY, function (err, decoded) {
//       console.log(err);
//       console.log("decoded", decoded);

//       if (err) {
//         console.log("error auth", err);
//       }

//       req.userId = decoded?._id;
//       next();
//     });
//   } catch (err) {
//     res.status(400).json({
//       message: err.message || err,
//       data: [],
//       error: true,
//       succes: false,
//     });
//   }
// }

// module.exports = authToken;

const jwt = require("jsonwebtoken");

// H√†m n√†y kh√¥ng th·ªÉ s·ª≠ d·ª•ng localStorage tr·ª±c ti·∫øp ·ªü ph√≠a server
function saveRoleToLocalStorage(role) {
  if (role) {
    // H√†m n√†y ch·ªâ n√™n g·ªçi ph√≠a client, khi response v·ªÅ client
    console.log("Vai tr√≤ ƒë√£ ƒë∆∞·ª£c l∆∞u v√†o localStorage:", role);
  } else {
    console.error(
      "Kh√¥ng th·ªÉ l∆∞u vai tr√≤ v√†o localStorage: Vai tr√≤ kh√¥ng t·ªìn t·∫°i."
    );
  }
}

async function authToken(req, res, next) {
  try {
    const token = req.cookies?.token;

    console.log("token", token);
    if (!token) {
      return res.status(200).json({
        message: "Vui l√≤ng ƒëƒÉng nh·∫≠p üòä",
        error: true,
        success: false,
      });
    }

    jwt.verify(token, process.env.TOKEN_SECRET_KEY, function (err, decoded) {
      console.log("decoded", decoded);

      if (err) {
        console.log("error auth", err);
        return res.status(401).json({
          message: "Token kh√¥ng h·ª£p l·ªá ho·∫∑c ƒë√£ h·∫øt h·∫°n.",
          error: true,
          success: false,
        });
      }

      req.userId = decoded?._id;
      req.role = decoded?.role; // L·∫•y vai tr√≤ t·ª´ token (n·∫øu c√≥)

      // G·ª≠i vai tr√≤ v·ªÅ ph√≠a client ƒë·ªÉ client c√≥ th·ªÉ l∆∞u v√†o localStorage
      res.role = req.role;

      next();
    });
  } catch (err) {
    res.status(400).json({
      message: err.message || err,
      data: [],
      error: true,
      success: false,
    });
  }
}

module.exports = authToken;
